export class Heightfield{constructor(t){this.cellSize=t.cellSize&&t.cellSize>0?t.cellSize:1,this.minHeight="number"==typeof t.minHeight?t.minHeight:0,this.maxHeight="number"==typeof t.maxHeight?t.maxHeight:1,this.xCount=0,this.yCount=0,this.xSize=0,this.ySize=0,this.heights=new Float32Array(0),this.faceNormals=new Float32Array(0),this.vtxNormals=new Float32Array(0),this.hInfo={i:0,t:0,z:0,n:new THREE.Vector3},t.image?this.genFromImg(t.image):(this.xCount=t.xCount&&t.xCount>0?Math.floor(t.xCount):1,this.yCount=t.yCount&&t.yCount>0?Math.floor(t.yCount):1,this.xSize=t.xCount*this.cellSize,this.ySize=t.yCount*this.cellSize,this.heights=t.heights||new Float32Array((this.xCount+1)*(this.yCount+1)),this.faceNormals=new Float32Array(6*this.xCount*this.yCount),this.vtxNormals=new Float32Array(3*(this.xCount+1)*(this.yCount+1)),this.calcFaceNormals())}pmod(t,i){return(t%i+i)%i}infoAt(t,i,h){var o=-this.xSize/2,e=-this.ySize/2;if(t<o||t>=-o||i<e||i>=-e){if(!h)return this.hInfo.i=-1,this.hInfo.z=this.minHeight,this.hInfo.n.x=this.hInfo.n.y=this.hInfo.n.z=0,void(this.hInfo.t=0);t=this.pmod(t-o,this.xSize)+o,i=this.pmod(i-e,this.ySize)+e}var s=this.cellSize,n=this.faceNormals,a=this.hInfo.n,r=Math.floor((t-o)/s),l=Math.floor((i-e)/s),x=r+l*(this.xCount+1),c=(t-o)%s,m=(i-e)%s,u=r+l*this.xCount;m>0&&c/m<1?(this.hInfo.t=0,a.x=n[6*u+0],a.y=n[6*u+1],a.z=n[6*u+2]):(this.hInfo.t=1,a.x=n[6*u+3],a.y=n[6*u+4],a.z=n[6*u+5]),this.hInfo.i=u,this.hInfo.z=this.getPlaneZ(a,this.heights[x],c,m)}heightAt(t,i,h){return void 0===h&&(h=!1),this.infoAt(t,i,h),this.hInfo.z}getPlaneZ(t,i,h,o){return i-(t.x*h+t.y*o)/t.z}genFromImg(t){var i,h,o,e=t.width,s=t.height,n=this.maxHeight-this.minHeight;this.xCount=e-1,this.yCount=s-1,this.xSize=this.xCount*this.cellSize,this.ySize=this.yCount*this.cellSize;var a=document.createElement("canvas");a.width=e,a.height=s;var r=a.getContext("2d");r.drawImage(t,0,0,e,s);var l=r.getImageData(0,0,e,s).data,x=new Float32Array(e*s);for(h=0;h<s;++h)for(i=0;i<e;++i)o=l[4*(i+(s-h-1)*e)]/255,x[i+h*e]=this.minHeight+o*n;l=r=a=null,this.heights=x,this.faceNormals=new Float32Array(6*this.xCount*this.yCount),this.vtxNormals=new Float32Array(3*(this.xCount+1)*(this.yCount+1)),this.calcFaceNormals(),this.calcVertexNormals()}calcFaceNormals(){for(var t=this.cellSize,i=this.xCount,h=this.yCount,o=this.xCount+1,e=this.heights,s=this.faceNormals,n=new THREE.Vector3,a=new THREE.Vector3,r=(new THREE.Vector3,0),l=Date.now(),x=0;x<h;++x)for(var c=0;c<i;++c){r=6*(c+x*i);var m=c+x*o,u=e[m];n.x=t,n.y=t,n.z=e[m+o+1]-u,a.x=0,a.y=t,a.z=e[m+o]-u,n.cross(a),n.normalize(),s[r+0]=n.x,s[r+1]=n.y,s[r+2]=n.z,n.x=t,n.y=0,n.z=e[m+1]-u,a.x=t,a.y=t,a.z=e[m+o+1]-u,n.cross(a),n.normalize(),s[r+3]=n.x,s[r+4]=n.y,s[r+5]=n.z}var y=Date.now()-l;console.log("computed ".concat(r," heightfield face normals in ").concat(y,"ms"))}calcVertexNormals(){for(var t=this.vtxNormals,i=this.xCount+1,h=this.yCount+1,o=new THREE.Vector3,e=0,s=Date.now(),n=0;n<h;++n)for(var a=0;a<i;++a)this.computeVertexNormal(a,n,o),e=3*(n*i+a),t[e++]=o.x,t[e++]=o.y,t[e++]=o.z;var r=Date.now()-s;console.log("computed ".concat(i*h," vertex normals in ").concat(r,"ms"))}computeVertexNormal(t,i,h){var o=this.faceNormals,e=t%this.xCount,s=i%this.yCount,n=3*(s*this.xCount+e)*2;h.x=o[n+0],h.y=o[n+1],h.z=o[n+2],n+=3,h.x+=o[n+0],h.y+=o[n+1],h.z+=o[n+2],e=this.pmod(e-1,this.xCount),n=3*(s*this.xCount+e)*2+3,h.x+=o[n+0],h.y+=o[n+1],h.z+=o[n+2],n=3*((s=this.pmod(s-1,this.yCount))*this.xCount+e)*2,h.x+=o[n+0],h.y+=o[n+1],h.z+=o[n+2],n+=3,h.x+=o[n+0],h.y+=o[n+1],h.z+=o[n+2],e=(e+1)%this.xCount,n=3*(s*this.xCount+e)*2,h.x+=o[n+0],h.y+=o[n+1],h.z+=o[n+2],h.normalize()}}