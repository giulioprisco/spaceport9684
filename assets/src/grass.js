var BLADE_SEGS=4,BLADE_VERTS=2*(BLADE_SEGS+1),BLADE_INDICES=12*BLADE_SEGS,BLADE_WIDTH=.15,BLADE_HEIGHT_MIN=2.25,BLADE_HEIGHT_MAX=3;export class Grass{constructor(e){var a={vindex:new Float32Array(2*BLADE_VERTS*1),shape:new Float32Array(4*e.numBlades),offset:new Float32Array(4*e.numBlades),index:new Uint16Array(BLADE_INDICES)};this.initBladeIndices(a.index,0,BLADE_VERTS,0),this.initBladeOffsetVerts(a.offset,e.numBlades,e.radius),this.initBladeShapeVerts(a.shape,e.numBlades,a.offset,e.simplex),this.initBladeIndexVerts(a.vindex);var t=new THREE.InstancedBufferGeometry;t.boundingSphere=new THREE.Sphere(new THREE.Vector3(0,0,0),1e4*Math.sqrt(e.radius*e.radius*2)),t.setAttribute("vindex",new THREE.BufferAttribute(a.vindex,1)),t.setAttribute("shape",new THREE.InstancedBufferAttribute(a.shape,4)),t.setAttribute("offset",new THREE.InstancedBufferAttribute(a.offset,4)),t.setIndex(new THREE.BufferAttribute(a.index,1));var r=e.texture;r.wrapS=r.wrapT=THREE.RepeatWrapping;var n=e.heightMap;n.wrapS=n.wrapT=THREE.RepeatWrapping;var i=e.heightMapScale,s=e.lightDir.clone();s.z*=.5,s.normalize();var E=e.vertScript.replace("%%BLADE_HEIGHT_TALL%%",(1.5*BLADE_HEIGHT_MAX).toFixed(1)).replace("%%BLADE_SEGS%%",BLADE_SEGS.toFixed(1)).replace("%%PATCH_SIZE%%",(2*e.radius).toFixed(1)).replace("%%TRANSITION_LOW%%",e.transitionLow.toString()).replace("%%TRANSITION_HIGH%%",e.transitionHigh.toString()),o=new THREE.RawShaderMaterial({uniforms:{lightDir:{type:"3f",value:s.toArray()},time:{type:"f",value:0},map:{type:"t",value:r},heightMap:{type:"t",value:n},heightMapScale:{type:"3f",value:[i.x,i.y,i.z]},camDir:{type:"3f",value:[1,0,0]},drawPos:{type:"2f",value:[100,0]},fogColor:{type:"3f",value:e.fogColor.toArray()},fogNear:{type:"f",value:1},fogFar:{type:"f",value:e.fogFar},grassColor:{type:"3f",value:e.grassColor.toArray()},grassFogFar:{type:"f",value:e.grassFogFar},windIntensity:{type:"f",value:e.windIntensity}},vertexShader:E,fragmentShader:e.fragScript,transparent:!0});this.mesh=new THREE.Mesh(t,o),this.mesh.frustumCulled=!1}initBladeIndices(e,a,t,r){var n;for(n=0;n<BLADE_SEGS;++n)e[r++]=a+0,e[r++]=a+1,e[r++]=a+2,e[r++]=a+2,e[r++]=a+1,e[r++]=a+3,a+=2;for(n=0;n<BLADE_SEGS;++n)e[r++]=t+2,e[r++]=t+1,e[r++]=t+0,e[r++]=t+3,e[r++]=t+1,e[r++]=t+2,t+=2}initBladeShapeVerts(e,a,t,r){for(var n=0,i=0;i<a;++i)n=Math.abs(r.simplex(.03*t[4*i+0],.03*t[4*i+1])),n*=n*n,n*=5,e[4*i+0]=BLADE_WIDTH+Math.random()*BLADE_WIDTH*.5,e[4*i+1]=BLADE_HEIGHT_MIN+Math.pow(Math.random(),4)*(BLADE_HEIGHT_MAX-BLADE_HEIGHT_MIN)+n,e[4*i+2]=0+.3*Math.random(),e[4*i+3]=.05+.3*Math.random()}initBladeOffsetVerts(e,a,t){function nrand(){return 2*Math.random()-1}for(var r=0;r<a;++r)e[4*r+0]=nrand()*t,e[4*r+1]=nrand()*t,e[4*r+2]=0,e[4*r+3]=2*Math.PI*Math.random()}initBladeIndexVerts(e){for(var a=0;a<e.length;++a)e[a]=a}update(e,a,t){var r=this.mesh.material;r.uniforms.time.value=e;var n=r.uniforms.camDir.value;n[0]=a.x,n[1]=a.y,n[2]=a.z,(n=r.uniforms.drawPos.value)[0]=t.x,n[1]=t.y}}